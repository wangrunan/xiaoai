{
  "uid" : "db26209b5821441",
  "name" : "TestMyPrize.test_myprize_03",
  "fullName" : "scripts.test_myprize.TestMyPrize.test_myprize_03",
  "historyId" : "b4780741e96de7e4672decefe7bc94a1",
  "time" : {
    "start" : 1599404306126,
    "stop" : 1599404372891,
    "duration" : 66765
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "passed",
  "statusMessage" : "TimeoutException: Message: \n",
  "statusTrace" : "self = <scripts.test_myprize.TestMyPrize object at 0x0000018307DBE898>\n\n    def test_myprize_03(self):\n        # 首页点击个人中心按钮\n        self.page.homepage.click_center_button()\n        # 点击\"我的奖品\"按钮\n        self.page.centerpage.click_my_prize()\n        #点击实物奖品\n        self.page.myprizepage.click_Cardvoucherprize_tab()\n        #断言-1.页面标题是——卡券奖品\n>       assert self.page.myprizepage.get_title_text()==\"卡券奖品\"\n\nscripts\\test_myprize.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\myprizepage.py:31: in get_title_text\n    return self.find_element6(self.title).text\nbase\\base_action.py:17: in find_element6\n    return WebDriverWait(self.driver, timeout, poll).until(lambda x:x.find_element(by, value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"00070f98-1dce-470e-a065-4a6a1d29f8c9\")>\nmethod = <function BaseAction.find_element6.<locals>.<lambda> at 0x0000018307D25730>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "PC202009061813"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "13896-MainThread"
  }, {
    "name" : "suite",
    "value" : "scripts.test_myprize"
  }, {
    "name" : "testClass",
    "value" : "scripts.test_myprize"
  }, {
    "name" : "testMethod",
    "value" : "TestMyPrize.test_myprize_03"
  }, {
    "name" : "package",
    "value" : "scripts.test_myprize"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "db26209b5821441.json",
  "parameterValues" : [ ]
}
{
  "uid" : "e51b37c80ff8bba2",
  "name" : "TestDomain.test_remind_01",
  "fullName" : "scripts.test1_domain.TestDomain.test_remind_01",
  "historyId" : "dba88b282711f34e7e655c189c2c251",
  "time" : {
    "start" : 1599966244015,
    "stop" : 1599966315774,
    "duration" : 71759
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "passed",
  "statusMessage" : "TimeoutException: Message: \n",
  "statusTrace" : "self = <scripts.test1_domain.TestDomain object at 0x044A7C30>\n\n    def test_remind_01(self):\n        time.sleep(3)\n        # 首页点击键盘\n        self.page.homepage.click_keyboard()\n        # 对话页输入“下午2点半提醒我喝水”\n        self.page.sessionpage.input_keyboard_input(\"下午2点半提醒我喝水\")\n        # 对话页点击发送\n        self.page.sessionpage.click_send_button()\n        # 断言\n>       assert self.page.sessionpage.get_text(self.page.sessionpage.small_card_icon) == \"日历\"\n\nscripts\\test1_domain.py:1488: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\base_action.py:36: in get_text\n    return self.find_element6(feature).text\nbase\\base_action.py:17: in find_element6\n    return WebDriverWait(self.driver, timeout, poll).until(lambda x:x.find_element(by, value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"945b2916-7c13-4340-af81-c0d07c4c01ea\")>\nmethod = <function BaseAction.find_element6.<locals>.<lambda> at 0x04462978>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "DESKTOP-IJRQON0"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "13864-MainThread"
  }, {
    "name" : "suite",
    "value" : "scripts.test1_domain"
  }, {
    "name" : "testClass",
    "value" : "scripts.test1_domain"
  }, {
    "name" : "testMethod",
    "value" : "TestDomain.test_remind_01"
  }, {
    "name" : "package",
    "value" : "scripts.test1_domain"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "e51b37c80ff8bba2.json",
  "parameterValues" : [ ]
}
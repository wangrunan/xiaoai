{"name": "test_school_timetable_add", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_short_cut.TestShortCut object at 0x000001DB48192F40>\n\n    def test_school_timetable_add(self):\n        # step1 首页点击个人中心按钮\n        time.sleep(3)\n        self.page.homepage.click_center_button()\n    \n        #step2 点击个人中心页面“快捷方式”\n        self.page.centerpage.click_shortcut_tab()\n    \n        # # step3 断言是否跳转到“快捷方式”页面\n        # assert self.page.stortcutpage.get_text(self.page.stortcutpage.stort_cut_title)=='快捷方式'\n    \n    \n        time.sleep(2)\n        #step4 点击快捷方式页面--课程表——添加\n    \n        self.page.shortcutpage.click_school_timetable_add()\n    \n        # step5 判断是否有添加到桌面的弹窗\n        #if self.driver.find_elements_by_xpath(\"//*[contains(@resource-id,'widget_name')]\"):\n        if self.page.shortcutpage.is_button_exist(self.page.shortcutpage.is_add_desk_pop_exist):\n            # step6 有添加到桌面的弹窗就点击添加\n            self.page.shortcutpage.click_school_home_screen_add()\n            time.sleep(1)\n    \n            # step7 判断是否有已尝试添加到桌面的弹窗\n            #if self.driver.find_elements_by_id(\"com.xiaomi.xiaoailite:id/btn_confirm\"):\n            if self.page.shortcutpage.is_button_exist(self.page.shortcutpage.is_add_desk_allary_exist):\n    \n                # step8 判断是否有已尝试添加到桌面的弹窗，有就点击确定\n>               self.page.shortcutpage.click_add_to_the_desktop_confirm()\n\ntest_short_cut.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\shortcutpage.py:50: in click_add_to_the_desktop_confirm\n    self.click(self.add_to_the_desktop_confirm)\n..\\base\\base_action.py:21: in click\n    self.find_element6(feature).click()\n..\\base\\base_action.py:17: in find_element6\n    return WebDriverWait(self.driver, timeout, poll).until(lambda x:x.find_element(by, value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"02ff211c-7896-4efc-aa10-99847ee45724\")>\nmethod = <function BaseAction.find_element6.<locals>.<lambda> at 0x000001DB48580430>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1599803633199, "stop": 1599803659327, "uuid": "c5518f31-2450-4f67-a8e7-0fec7e7caf7f", "historyId": "b986d1ec01faf10ff11b785414db70ea", "fullName": "scripts.test_short_cut.TestShortCut#test_school_timetable_add", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_short_cut"}, {"name": "subSuite", "value": "TestShortCut"}, {"name": "host", "value": "M-EMEOND1EH3V3K"}, {"name": "thread", "value": "15388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_short_cut"}]}